# Generated by Django 5.2.3 on 2025-06-12 05:55

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='MedicalDepartment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_ko', models.CharField(max_length=100, verbose_name='진료과목명(한국어)')),
                ('name_en', models.CharField(max_length=100, verbose_name='진료과목명(영어)')),
                ('name_zh', models.CharField(blank=True, max_length=100, verbose_name='진료과목명(중국어)')),
                ('name_ja', models.CharField(blank=True, max_length=100, verbose_name='진료과목명(일본어)')),
                ('name_ru', models.CharField(blank=True, max_length=100, verbose_name='진료과목명(러시아어)')),
                ('name_ar', models.CharField(blank=True, max_length=100, verbose_name='진료과목명(아랍어)')),
                ('description', models.TextField(blank=True, verbose_name='설명')),
                ('icon', models.CharField(default='fas fa-stethoscope', max_length=50, verbose_name='아이콘')),
                ('is_popular', models.BooleanField(default=False, verbose_name='인기진료과목')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': '진료과목',
                'verbose_name_plural': '진료과목들',
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('phone_number', models.CharField(blank=True, max_length=17, validators=[django.core.validators.RegexValidator(message="전화번호는 '+999999999' 형식이어야 합니다. 최대 15자리까지 가능합니다.", regex='^\\+?1?\\d{9,15}$')])),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('country', models.CharField(choices=[('KR', '한국'), ('US', 'United States'), ('CN', '中国'), ('JP', '日本'), ('RU', 'Россия'), ('SA', 'العربية السعودية'), ('DE', 'Deutschland'), ('FR', 'France'), ('GB', 'United Kingdom'), ('OTHER', 'Other')], default='KR', max_length=10)),
                ('preferred_language', models.CharField(choices=[('ko', '한국어'), ('en', 'English'), ('zh', '中文'), ('ja', '日本語'), ('ru', 'Русский'), ('ar', 'العربية'), ('de', 'Deutsch'), ('fr', 'Français')], default='ko', max_length=5)),
                ('emergency_contact', models.CharField(blank=True, max_length=100)),
                ('emergency_phone', models.CharField(blank=True, max_length=17, validators=[django.core.validators.RegexValidator(message="전화번호는 '+999999999' 형식이어야 합니다. 최대 15자리까지 가능합니다.", regex='^\\+?1?\\d{9,15}$')])),
                ('passport_number', models.CharField(blank=True, max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='의사명')),
                ('specialization', models.CharField(max_length=200, verbose_name='전문분야')),
                ('experience_years', models.PositiveIntegerField(verbose_name='경력(년)')),
                ('languages', models.CharField(max_length=100, verbose_name='구사언어')),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to='doctors/')),
                ('bio', models.TextField(blank=True, verbose_name='프로필')),
                ('consultation_fee', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='진료비')),
                ('is_available', models.BooleanField(default=True, verbose_name='진료가능')),
                ('rating', models.DecimalField(decimal_places=2, default=0.0, max_digits=3, verbose_name='평점')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='doctors', to='medical.medicaldepartment')),
            ],
            options={
                'verbose_name': '의사',
                'verbose_name_plural': '의사들',
            },
        ),
        migrations.CreateModel(
            name='MedicalPackage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_ko', models.CharField(max_length=200, verbose_name='패키지명(한국어)')),
                ('name_en', models.CharField(max_length=200, verbose_name='패키지명(영어)')),
                ('package_type', models.CharField(choices=[('basic', '기본 검진'), ('premium', '프리미엄 검진'), ('cosmetic', '미용 패키지'), ('wellness', '웰니스 패키지'), ('dental', '치과 패키지')], default='basic', max_length=20)),
                ('description', models.TextField(verbose_name='패키지 설명')),
                ('price', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='가격')),
                ('duration_days', models.PositiveIntegerField(verbose_name='소요일수')),
                ('includes', models.TextField(verbose_name='포함사항')),
                ('excludes', models.TextField(blank=True, verbose_name='불포함사항')),
                ('popular_countries', models.CharField(blank=True, max_length=100, verbose_name='인기국가')),
                ('image', models.ImageField(blank=True, null=True, upload_to='packages/')),
                ('is_featured', models.BooleanField(default=False, verbose_name='추천 패키지')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='medical.medicaldepartment')),
            ],
            options={
                'verbose_name': '의료패키지',
                'verbose_name_plural': '의료패키지들',
            },
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('appointment_date', models.DateTimeField(verbose_name='예약일시')),
                ('status', models.CharField(choices=[('pending', '예약 대기'), ('confirmed', '예약 확정'), ('cancelled', '예약 취소'), ('completed', '진료 완료'), ('no_show', '노쇼')], default='pending', max_length=20)),
                ('payment_status', models.CharField(choices=[('pending', '결제 대기'), ('paid', '결제 완료'), ('refunded', '환불 완료'), ('failed', '결제 실패')], default='pending', max_length=20)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='총 금액')),
                ('notes', models.TextField(blank=True, verbose_name='특이사항')),
                ('symptoms', models.TextField(blank=True, verbose_name='증상')),
                ('medical_history', models.TextField(blank=True, verbose_name='병력')),
                ('allergies', models.TextField(blank=True, verbose_name='알레르기')),
                ('medications', models.TextField(blank=True, verbose_name='복용약물')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointments', to=settings.AUTH_USER_MODEL)),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointments', to='medical.doctor')),
                ('package', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='medical.medicalpackage')),
            ],
            options={
                'verbose_name': '예약',
                'verbose_name_plural': '예약들',
                'ordering': ['-appointment_date'],
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='제목')),
                ('message', models.TextField(verbose_name='메시지')),
                ('notification_type', models.CharField(choices=[('appointment', '예약 관련'), ('payment', '결제 관련'), ('reminder', '예약 알림'), ('system', '시스템 알림')], default='system', max_length=20)),
                ('is_read', models.BooleanField(default=False, verbose_name='읽음 여부')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '알림',
                'verbose_name_plural': '알림들',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='결제금액')),
                ('currency', models.CharField(default='KRW', max_length=3, verbose_name='통화')),
                ('payment_method', models.CharField(choices=[('credit_card', '신용카드'), ('bank_transfer', '계좌이체'), ('paypal', 'PayPal'), ('wechat', '위챗페이'), ('alipay', '알리페이')], max_length=20)),
                ('transaction_id', models.CharField(max_length=100, unique=True, verbose_name='거래ID')),
                ('payment_date', models.DateTimeField(auto_now_add=True)),
                ('refund_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='환불금액')),
                ('refund_date', models.DateTimeField(blank=True, null=True, verbose_name='환불일시')),
                ('appointment', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='payment', to='medical.appointment')),
            ],
            options={
                'verbose_name': '결제',
                'verbose_name_plural': '결제들',
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveIntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], verbose_name='평점')),
                ('title', models.CharField(max_length=200, verbose_name='제목')),
                ('content', models.TextField(verbose_name='후기 내용')),
                ('recommend', models.BooleanField(default=True, verbose_name='추천 여부')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('appointment', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='review', to='medical.appointment')),
            ],
            options={
                'verbose_name': '후기',
                'verbose_name_plural': '후기들',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DoctorSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weekday', models.IntegerField(choices=[(0, '월요일'), (1, '화요일'), (2, '수요일'), (3, '목요일'), (4, '금요일'), (5, '토요일'), (6, '일요일')])),
                ('start_time', models.TimeField(verbose_name='시작시간')),
                ('end_time', models.TimeField(verbose_name='종료시간')),
                ('is_available', models.BooleanField(default=True, verbose_name='진료가능')),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='schedules', to='medical.doctor')),
            ],
            options={
                'verbose_name': '의사 스케줄',
                'verbose_name_plural': '의사 스케줄들',
                'unique_together': {('doctor', 'weekday', 'start_time')},
            },
        ),
    ]
